// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.4
// source: technology_tree.proto

package technology_tree

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetTechnologyTreeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetTechnologyTreeReq) Reset() {
	*x = GetTechnologyTreeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_technology_tree_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTechnologyTreeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTechnologyTreeReq) ProtoMessage() {}

func (x *GetTechnologyTreeReq) ProtoReflect() protoreflect.Message {
	mi := &file_technology_tree_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTechnologyTreeReq.ProtoReflect.Descriptor instead.
func (*GetTechnologyTreeReq) Descriptor() ([]byte, []int) {
	return file_technology_tree_proto_rawDescGZIP(), []int{0}
}

type GetTechnologyTreeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string            `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*TechnologyTree `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetTechnologyTreeResp) Reset() {
	*x = GetTechnologyTreeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_technology_tree_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTechnologyTreeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTechnologyTreeResp) ProtoMessage() {}

func (x *GetTechnologyTreeResp) ProtoReflect() protoreflect.Message {
	mi := &file_technology_tree_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTechnologyTreeResp.ProtoReflect.Descriptor instead.
func (*GetTechnologyTreeResp) Descriptor() ([]byte, []int) {
	return file_technology_tree_proto_rawDescGZIP(), []int{1}
}

func (x *GetTechnologyTreeResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetTechnologyTreeResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetTechnologyTreeResp) GetData() []*TechnologyTree {
	if x != nil {
		return x.Data
	}
	return nil
}

type TechnologyTree struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level int32         `protobuf:"varint,1,opt,name=level,proto3" json:"level,omitempty"`
	Data  []*Technology `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *TechnologyTree) Reset() {
	*x = TechnologyTree{}
	if protoimpl.UnsafeEnabled {
		mi := &file_technology_tree_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TechnologyTree) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TechnologyTree) ProtoMessage() {}

func (x *TechnologyTree) ProtoReflect() protoreflect.Message {
	mi := &file_technology_tree_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TechnologyTree.ProtoReflect.Descriptor instead.
func (*TechnologyTree) Descriptor() ([]byte, []int) {
	return file_technology_tree_proto_rawDescGZIP(), []int{2}
}

func (x *TechnologyTree) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *TechnologyTree) GetData() []*Technology {
	if x != nil {
		return x.Data
	}
	return nil
}

type Technology struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Cost        int32  `protobuf:"varint,4,opt,name=cost,proto3" json:"cost,omitempty"`
	Ancient     bool   `protobuf:"varint,5,opt,name=ancient,proto3" json:"ancient,omitempty"`
	Icon        string `protobuf:"bytes,6,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *Technology) Reset() {
	*x = Technology{}
	if protoimpl.UnsafeEnabled {
		mi := &file_technology_tree_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Technology) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Technology) ProtoMessage() {}

func (x *Technology) ProtoReflect() protoreflect.Message {
	mi := &file_technology_tree_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Technology.ProtoReflect.Descriptor instead.
func (*Technology) Descriptor() ([]byte, []int) {
	return file_technology_tree_proto_rawDescGZIP(), []int{3}
}

func (x *Technology) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Technology) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Technology) GetCost() int32 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *Technology) GetAncient() bool {
	if x != nil {
		return x.Ancient
	}
	return false
}

func (x *Technology) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

var File_technology_tree_proto protoreflect.FileDescriptor

var file_technology_tree_proto_rawDesc = []byte{
	0x0a, 0x15, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x5f, 0x74, 0x72, 0x65,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c,
	0x6f, 0x67, 0x79, 0x5f, 0x74, 0x72, 0x65, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54,
	0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71,
	0x22, 0x7a, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f, 0x67,
	0x79, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f,
	0x67, 0x79, 0x5f, 0x74, 0x72, 0x65, 0x65, 0x2e, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f,
	0x67, 0x79, 0x54, 0x72, 0x65, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x57, 0x0a, 0x0e,
	0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x54, 0x72, 0x65, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x5f,
	0x74, 0x72, 0x65, 0x65, 0x2e, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x84, 0x01, 0x0a, 0x0a, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f,
	0x6c, 0x6f, 0x67, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x6e, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x61, 0x6e, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x32, 0x7a, 0x0a, 0x14,
	0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x54, 0x72, 0x65, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x12, 0x62, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x54, 0x65, 0x63, 0x68, 0x6e,
	0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x54, 0x72, 0x65, 0x65, 0x12, 0x25, 0x2e, 0x74, 0x65, 0x63, 0x68,
	0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x5f, 0x74, 0x72, 0x65, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x26, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x5f, 0x74, 0x72,
	0x65, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79,
	0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x42, 0x13, 0x5a, 0x11, 0x2e, 0x2f, 0x74, 0x65,
	0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x5f, 0x74, 0x72, 0x65, 0x65, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_technology_tree_proto_rawDescOnce sync.Once
	file_technology_tree_proto_rawDescData = file_technology_tree_proto_rawDesc
)

func file_technology_tree_proto_rawDescGZIP() []byte {
	file_technology_tree_proto_rawDescOnce.Do(func() {
		file_technology_tree_proto_rawDescData = protoimpl.X.CompressGZIP(file_technology_tree_proto_rawDescData)
	})
	return file_technology_tree_proto_rawDescData
}

var file_technology_tree_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_technology_tree_proto_goTypes = []interface{}{
	(*GetTechnologyTreeReq)(nil),  // 0: technology_tree.GetTechnologyTreeReq
	(*GetTechnologyTreeResp)(nil), // 1: technology_tree.GetTechnologyTreeResp
	(*TechnologyTree)(nil),        // 2: technology_tree.TechnologyTree
	(*Technology)(nil),            // 3: technology_tree.Technology
}
var file_technology_tree_proto_depIdxs = []int32{
	2, // 0: technology_tree.GetTechnologyTreeResp.data:type_name -> technology_tree.TechnologyTree
	3, // 1: technology_tree.TechnologyTree.data:type_name -> technology_tree.Technology
	0, // 2: technology_tree.TechnologyTreeServer.GetTechnologyTree:input_type -> technology_tree.GetTechnologyTreeReq
	1, // 3: technology_tree.TechnologyTreeServer.GetTechnologyTree:output_type -> technology_tree.GetTechnologyTreeResp
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_technology_tree_proto_init() }
func file_technology_tree_proto_init() {
	if File_technology_tree_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_technology_tree_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTechnologyTreeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_technology_tree_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTechnologyTreeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_technology_tree_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TechnologyTree); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_technology_tree_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Technology); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_technology_tree_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_technology_tree_proto_goTypes,
		DependencyIndexes: file_technology_tree_proto_depIdxs,
		MessageInfos:      file_technology_tree_proto_msgTypes,
	}.Build()
	File_technology_tree_proto = out.File
	file_technology_tree_proto_rawDesc = nil
	file_technology_tree_proto_goTypes = nil
	file_technology_tree_proto_depIdxs = nil
}
