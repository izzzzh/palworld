// Code generated by goctl. DO NOT EDIT.
// Source: skill.proto

package skillclient

import (
	"context"

	"skill/skill"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = skill.Request
	Response = skill.Response

	Skill interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultSkill struct {
		cli zrpc.Client
	}
)

func NewSkill(cli zrpc.Client) Skill {
	return &defaultSkill{
		cli: cli,
	}
}

func (m *defaultSkill) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := skill.NewSkillClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
